{"uid":"7bdafa2c55639e84","name":"test_updating_pet_by_id_name_and_status","fullName":"test_pets.TestPetApi#test_updating_pet_by_id_name_and_status","historyId":"68b9fa75856be983c0f2e42401928226","time":{"start":1703684482141,"stop":1703684482404,"duration":263},"description":"\n        Verify updating an existing pet\n        ","descriptionHtml":"<pre><code>    Verify updating an existing pet\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Response status code should be 200","statusTrace":"self = <tests.test_pets.TestPetApi object at 0x7fcf0a4ebe90>\ncreate_pet = {'category': {'id': 147645035, 'name': 'Joshua Martin'}, 'id': 0, 'name': 'new_name', 'photoUrls': ['https://dummyimage.com/608x453'], ...}\n\n    @pytest.mark.pet\n    def test_updating_pet_by_id_name_and_status(self, create_pet):\n        \"\"\"\n        Verify updating an existing pet\n        \"\"\"\n        name_to_update = 'new_name'\n        status_to_update = 'new_status'\n    \n        create_pet['name'] = name_to_update\n        create_pet['status'] = status_to_update\n        status_code, response_data = PetClient.updates_pet_in_a_store(\n            pet_id=create_pet['id'], name=name_to_update, status=status_to_update)\n    \n>       assert_status_code(status_code)\n\ntests/test_pets.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstatus_code = 404, expected_status_code = 200\n\n    def assert_status_code(status_code: int, expected_status_code: int = 200):\n        with allure.step(f\"Assert that response status code is {expected_status_code}\"):\n>           assert status_code == expected_status_code, f\"Response status code should be {expected_status_code}\"\nE           AssertionError: Response status code should be 200\n\nutils/response_assertions.py:8: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1703684481654,"stop":1703684481794,"duration":140},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_pet","time":{"start":1703684481794,"stop":1703684482140,"duration":346},"status":"passed","steps":[{"name":"POST: Add new pet to the store (Request URL: https://petstore.swagger.io/v2/pet, body: {\"id\": 0, \"category\": {\"id\": 147645035, \"name\": \"Joshua Martin\"}, \"name\": \"Kyle Bowers\", \"photoUrls\": [\"https://dummyimage.com/608x453\"], \"tags\": [{\"id\": 8006, \"name\": \"bit\"}], \"status\": \"available\"}","time":{"start":1703684481874,"stop":1703684482139,"duration":265},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assert that response status code is 200","time":{"start":1703684482140,"stop":1703684482140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"\n        Verify updating an existing pet\n        ","status":"failed","statusMessage":"AssertionError: Response status code should be 200","statusTrace":"self = <tests.test_pets.TestPetApi object at 0x7fcf0a4ebe90>\ncreate_pet = {'category': {'id': 147645035, 'name': 'Joshua Martin'}, 'id': 0, 'name': 'new_name', 'photoUrls': ['https://dummyimage.com/608x453'], ...}\n\n    @pytest.mark.pet\n    def test_updating_pet_by_id_name_and_status(self, create_pet):\n        \"\"\"\n        Verify updating an existing pet\n        \"\"\"\n        name_to_update = 'new_name'\n        status_to_update = 'new_status'\n    \n        create_pet['name'] = name_to_update\n        create_pet['status'] = status_to_update\n        status_code, response_data = PetClient.updates_pet_in_a_store(\n            pet_id=create_pet['id'], name=name_to_update, status=status_to_update)\n    \n>       assert_status_code(status_code)\n\ntests/test_pets.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstatus_code = 404, expected_status_code = 200\n\n    def assert_status_code(status_code: int, expected_status_code: int = 200):\n        with allure.step(f\"Assert that response status code is {expected_status_code}\"):\n>           assert status_code == expected_status_code, f\"Response status code should be {expected_status_code}\"\nE           AssertionError: Response status code should be 200\n\nutils/response_assertions.py:8: AssertionError","steps":[{"name":"POST: Updates a pet in the store with form data (Request URL: https://petstore.swagger.io/v2/pet/0)","time":{"start":1703684482142,"stop":1703684482402,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assert that response status code is 200","time":{"start":1703684482403,"stop":1703684482403,"duration":0},"status":"failed","statusMessage":"AssertionError: Response status code should be 200\n","statusTrace":"  File \"/home/runner/work/pet_test_api/pet_test_api/utils/response_assertions.py\", line 8, in assert_status_code\n    assert status_code == expected_status_code, f\"Response status code should be {expected_status_code}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"create_pet::0","time":{"start":1703684482460,"stop":1703684482460,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Tests for pets"},{"name":"tag","value":"pet"},{"name":"suite","value":"test_pets"},{"name":"subSuite","value":"TestPetApi"},{"name":"host","value":"fv-az569-346"},{"name":"thread","value":"2215-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_pets"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":7},"items":[{"uid":"6d11348f2f737024","reportUrl":"https://abaksheeva.github.io/pet_test_api/2//#testresult/6d11348f2f737024","status":"failed","statusDetails":"AssertionError: Response status code should be 200","time":{"start":1702322060191,"stop":1702322060245,"duration":54}},{"uid":"764e85bc790cbe16","reportUrl":"https://abaksheeva.github.io/pet_test_api/1//#testresult/764e85bc790cbe16","status":"passed","time":{"start":1702321803908,"stop":1702321804034,"duration":126}},{"uid":"a20ec0fda6a9dfa2","reportUrl":"https://abaksheeva.github.io/pet_test_api/6//#testresult/a20ec0fda6a9dfa2","status":"passed","time":{"start":1702318529896,"stop":1702318530030,"duration":134}},{"uid":"9d901f928142843f","reportUrl":"https://abaksheeva.github.io/pet_test_api/5//#testresult/9d901f928142843f","status":"passed","time":{"start":1702318421888,"stop":1702318422529,"duration":641}},{"uid":"bb4fe98b26c61ff8","reportUrl":"https://abaksheeva.github.io/pet_test_api/4//#testresult/bb4fe98b26c61ff8","status":"passed","time":{"start":1702317293391,"stop":1702317293666,"duration":275}},{"uid":"29bb9d2146567d29","reportUrl":"https://abaksheeva.github.io/pet_test_api/3//#testresult/29bb9d2146567d29","status":"passed","time":{"start":1702316299363,"stop":1702316299682,"duration":319}}]},"tags":["pet"]},"source":"7bdafa2c55639e84.json","parameterValues":[]}